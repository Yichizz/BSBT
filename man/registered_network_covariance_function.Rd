% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/registered.covariance.function.R
\name{registered_network_covariance_function}
\alias{registered_network_covariance_function}
\title{Construct a registered covariance matrix from the coordiantes of the nodes}
\usage{
registered_network_covariance_function(
  coordinates,
  plane.boundary,
  type,
  hyperparameters,
  linear.combination,
  linear.constraint = 0,
  tol = 1e-05
)
}
\arguments{
\item{coordinates}{An Nx2 dataframe containing the Euclidean coordinates of the nodes.The first column should contain the x/longitude coordinates and the second column the y/latatiude coordinates.}

\item{plane.boundary}{A matrix containing the cooridnates of the vertices of the boundard of the space. See \link[ggvoronoi]{ggvoronoi}.}

\item{type}{The type of covariance function used. One of "sqexp", "ratquad" or "matern". Note: only matern with nu = 5/2 is supported.}

\item{hyperparameters}{A vector containing the covariance function hyperparameters. For the squared exponential and matern, the vector should contain the variance and length scale, for the rational quadratic, the vector should contain the variance, lenght scale and scaling parameters}

\item{linear.combination}{A matrix which defines the linear combination of (lambda_1, ..., lambda_N)^T.}

\item{linear.constraint}{The value the linear constraint takes. Defaults to 0.}

\item{tol}{The tolerance for the Cholesky decomposition}
}
\value{
The mean vector and covariance matrix
}
\description{
This function constructs a covariance function from the Euclidean coordinates of the nodes. It constructs a voronoi grpah to partition the space and places edges betweeen areas which are adjacent. The covairance function may be suqred exponential, rational quadratic or Matern
}
\examples{

coords <- data.frame("x" = runif(10), "y" = runif(10)) #generate coordinates
boundary <- data.frame("x" = c(0, 0, 1, 1), "y" = c(0, 1, 1, 0)) #generate boundary of area
#create covariance matrix using Squared Exponential function and subject to the constraint
#the sum of the deprivation levels is 0.
k <- registered_network_covariance_function(coords, boundary, "sqexp",
c(1, 0.5), rep(1, 10), linear.constraint = 0, tol = 1e-1)
}
